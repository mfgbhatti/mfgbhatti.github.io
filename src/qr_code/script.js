document.addEventListener("DOMContentLoaded", function () {
  const gridContainer = document.getElementById("grid-container");
  const SIZE = 27;
  const color = [
    "rgb(100,123,161)",
    "rgb(225,88,41)",
    "rgb(225,184,25)",
    "rgb(199,95,255)",
    "rgb(134,234,22)",
  ];

  const dataCoords = new Set();
  // prettier-ignore
  const coords = [
    [2, 10], [2, 11], [2, 12], [2, 14], [3, 10], [3, 11], [3, 16], [3, 17],
    [3, 18], [4, 10], [4, 11], [4, 12], [4, 15], [4, 16], [4, 17], [4, 18],
    [5, 11], [5, 12], [5, 14], [5, 15], [5, 17], [6, 11], [6, 12], [6, 13],
    [6, 14], [6, 16], [7, 10], [7, 12], [7, 14], [7, 16], [8, 10], [8, 12],
    [8, 14], [8, 16], [8, 18], [9, 10], [9, 13], [9, 14], [9, 16], [9, 17],
    [10, 4], [10, 5], [10, 6], [10, 8], [10, 10], [10, 11], [10, 12], [10, 13],
    [10, 17], [10, 19], [10, 20], [10, 21], [10, 24], [10, 25], [10, 26],
    [11, 2], [11, 3], [11, 4], [11, 11], [11, 14], [11, 16], [11, 18],
    [11, 21], [11, 23], [11, 25], [12, 3], [12, 4], [12, 7], [12, 8],
    [12, 9], [12, 11], [12, 13], [12, 15], [12, 16], [12, 17], [12, 20],
    [12, 23], [12, 24], [12, 25], [12, 26], [13, 2], [13, 4], [13, 5],
    [13, 7], [13, 13], [13, 14], [13, 15], [13, 16], [13, 17], [13, 19],
    [13, 20], [13, 22], [13, 25], [13, 26], [14, 5], [14, 6], [14, 8], [14, 11],
    [14, 13], [14, 14], [14, 18], [14, 19], [14, 20], [14, 22], [14, 23], [14, 24], 
    [14, 26], [15, 2], [15, 3], [15, 5], [15, 6], [15, 11], [15, 12], [15, 17], 
    [15, 21], [15, 23], [15, 24], [16, 2], [16, 5], [16, 8], [16, 10], [16, 11], 
    [16, 12], [16, 14], [16, 15], [16, 17], [16, 18], [16, 19], [16, 21], [16, 22], 
    [16, 23], [16, 25], [16, 26], [17, 2], [17, 5], [17, 4], [17, 6], [17, 9], 
    [17, 11], [17, 13], [17, 15], [17, 16], [17, 17], [17, 21], [18, 2], [18, 5],
    [18, 7], [18, 8], [18, 10], [18, 13], [18, 15], [18, 17], [18, 23], [18, 24],
    [18, 25], [18, 26], [19, 10], [19, 12], [19, 16], [19, 17], [19, 23], [20, 11],
    [20, 12], [20, 14], [20, 15], [20, 16], [20, 17], [20, 25], [20, 26], [21, 26],
    [21, 13], [21, 12], [21, 11], [22, 10], [22, 14], [22, 15], [22, 23], [22, 24],
    [22, 25], [23, 10], [23, 11], [23, 12], [23, 13], [23, 14], [23, 16], [23, 17],
    [23, 18], [23, 19], [23, 20], [23, 22], [23, 24], [23, 26], [24, 26], [24, 24],
    [24, 23], [24, 21], [24, 18], [24, 11], [24, 10], [25, 14], [25, 16], [25, 17],
    [25, 23], [25, 26], [26, 26], [26, 25], [26, 24], [26, 23], [26, 19], [26, 20],
    [26, 17], [26, 16], [26, 15], [26, 14], [26, 13], [26, 11],  
  ];

  coords.forEach(([x, y]) => dataCoords.add(`${x},${y}`));

  const draw_finder_pattern = (x, y) => {
    const positions = [
      { x: 1, y: 1 },
      { x: 1, y: SIZE - 8 },
      { x: SIZE - 8, y: 1 },
    ];
    return positions.some((pos) => {
      const dx = x - pos.x,
        dy = y - pos.y;
      return (
        dx >= 1 &&
        dx < 8 &&
        dy >= 1 &&
        dy < 8 &&
        (dx === 1 ||
          dx === 7 ||
          dy === 1 ||
          dy === 7 ||
          (dx >= 3 && dx <= 5 && dy >= 3 && dy <= 5))
      );
    });
  };

  function draw_alignment_pattern(i, j, offsetX, offsetY) {
    let localI = i - offsetX;
    let localJ = j - offsetY;

    if (localI >= 1 && localJ <= 5 && localI <= 5 && localJ >= 1) {
      if (localI == 1 || localJ == 5 || localJ == 1 || localI == 5) {
        return true;
      }
      if (localI === 3 && localJ === 3) {
        return true;
      }
      return false;
    }
  }

  // Create the rows
  for (let x = 1; x <= SIZE; x++) {
    const rowEl = document.createElement("div");
    rowEl.className = "grid-row";
    rowEl.title = `row ${x}`;
    // Create the columns
    for (let y = 1; y <= SIZE; y++) {
      const columnEl = document.createElement("div");
      columnEl.className = "grid-cell";
      columnEl.title = `Row ${x}, Column ${y}`;
      // Optional: Add coordinates as text (commented out by default)
      columnEl.textContent = `${x},${y}`;
      if (draw_finder_pattern(x, y)) {
        columnEl.style.backgroundColor = [color[0], color[1], color[2]][
          x <= 8 && y <= 8 ? 0 : x >= SIZE - 8 && y <= 8 ? 1 : 2
        ];
      } else if (draw_alignment_pattern(x, y, SIZE - 10, SIZE - 10)) {
        columnEl.style.backgroundColor = color[4];
      }
      if (dataCoords.has(`${x},${y}`)) {
        columnEl.style.backgroundColor = color[3];
      }

      rowEl.appendChild(columnEl);
    }
    gridContainer.appendChild(rowEl);
  }

  // function draw_finder_pattern(i, j, offsetX, offsetY) {
  //   let localI = i - offsetX;
  //   let localJ = j - offsetY;

  //   if (localI >= 1 && localI < 8 && localJ >= 1 && localJ < 8) {
  //     //outer square
  //     if (localI === 1 || localI === 7 || localJ === 1 || localJ === 7)
  //       return true;
  //     //inner squre
  //     if (localI >= 3 && localI <= 5 && localJ >= 3 && localJ <= 5) return true;
  //   }
  //   return false;
  // }

  // const coords = [
  //   [2, 10],
  //   [2, 11],
  //   [2, 12],
  //   [2, 14],
  //   [3, 10],
  //   [3, 11],
  //   [3, 16],
  //   [3, 17],
  //   [3, 18],
  //   [4, 10],
  //   [4, 11],
  //   [4, 12],
  //   [4, 15],
  //   [4, 16],
  //   [4, 17],
  //   [4, 18],
  //   [5, 11],
  //   [5, 12],
  //   [5, 14],
  //   [5, 15],
  //   [5, 17],
  //   [6, 11],
  //   [6, 12],
  //   [6, 13],
  //   [6, 14],
  //   [6, 16],
  //   [7, 10],
  //   [7, 12],
  //   [7, 14],
  //   [7, 16],
  //   [8, 10],
  //   [8, 12],
  //   [8, 14],
  //   [8, 16],
  //   [8, 18],
  //   [9, 10],
  //   [9, 13],
  //   [9, 14],
  //   [9, 16],
  //   [9, 17],
  //   [10, 4],
  //   [10, 5],
  //   [10, 6],
  //   [10, 8],
  //   [10, 10],
  //   [10, 11],
  //   [10, 12],
  //   [10, 13],
  //   [10, 17],
  //   [10, 19],
  //   [10, 20],
  //   [10, 21],
  //   [10, 24],
  //   [10, 25],
  //   [10, 26],
  //   [11, 2],
  //   [11, 3],
  //   [11, 4],
  //   [11, 11],
  //   [11, 14],
  //   [11, 16],
  //   [11, 18],
  //   [11, 21],
  //   [11, 23],
  //   [11, 25],
  //   [12, 3],
  //   [12, 4],
  //   [12, 7],
  //   [12, 8],
  //   [12, 9],
  //   [12, 11],
  //   [12, 13],
  //   [12, 15],
  //   [12, 16],
  //   [12, 17],
  //   [12, 20],
  //   [12, 23],
  //   [12, 24],
  //   [12, 25],
  //   [12, 26],
  //   [13, 2],
  //   [13, 4],
  //   [13, 5],
  //   [13, 7],
  //   [13, 13],
  //   [13, 14],
  //   [13, 15],
  //   [13, 16],
  //   [13, 17],
  //   [13, 19],
  //   [13, 20],
  //   [13, 22],
  //   [13, 25],
  //   [13, 26],
  //   [14, 5],
  //   [14, 6],
  //   [14, 8],
  //   [14, 11],
  //   [14, 13],
  //   [14, 14],
  //   [14, 18],
  //   [14, 19],
  //   [14, 20],
  //   [14, 22],
  //   [14, 23],
  //   [14, 24],
  //   [14, 26],
  //   [15, 2],
  //   [15, 3],
  //   [15, 5],
  //   [15, 6],
  //   [15, 11],
  //   [15, 12],
  //   [15, 17],
  //   [15, 21],
  //   [15, 23],
  //   [15, 24],
  //   [16, 2],
  //   [16, 5],
  //   [16, 8],
  //   [16, 10],
  //   [16, 11],
  //   [16, 12],
  //   [16, 14],
  //   [16, 15],
  //   [16, 17],
  //   [16, 18],
  //   [16, 19],
  //   [16, 21],
  //   [16, 22],
  //   [16, 23],
  //   [16, 25],
  //   [16, 26],
  //   [17, 2],
  //   [17, 5],
  //   [17, 4],
  //   [17, 6],
  //   [17, 9],
  //   [17, 11],
  //   [17, 13],
  //   [17, 15],
  //   [17, 16],
  //   [17, 17],
  //   [17, 21],
  //   [18, 2],
  //   [18, 5],
  //   [18, 7],
  //   [18, 8],
  //   [18, 10],
  //   [18, 13],
  //   [18, 15],
  //   [18, 17],
  //   [18, 23],
  //   [18, 24],
  //   [18, 25],
  //   [18, 26],
  //   [19, 10],
  //   [19, 12],
  //   [19, 16],
  //   [19, 17],
  //   [19, 23],
  //   [20, 11],
  //   [20, 12],
  //   [20, 14],
  //   [20, 15],
  //   [20, 16],
  //   [20, 17],
  //   [20, 25],
  //   [20, 26],
  //   [21, 26],
  //   [21, 13],
  //   [21, 12],
  //   [21, 11],
  //   [22, 10],
  //   [22, 14],
  //   [22, 15],
  //   [22, 23],
  //   [22, 24],
  //   [22, 25],
  //   [23, 10],
  //   [23, 11],
  //   [23, 12],
  //   [23, 13],
  //   [23, 14],
  //   [23, 16],
  //   [23, 17],
  //   [23, 18],
  //   [23, 19],
  //   [23, 20],
  //   [23, 22],
  //   [23, 24],
  //   [23, 26],
  //   [24, 26],
  //   [24, 24],
  //   [24, 23],
  //   [24, 21],
  //   [24, 18],
  //   [24, 11],
  //   [24, 10],
  //   [25, 14],
  //   [25, 16],
  //   [25, 17],
  //   [25, 23],
  //   [25, 26],
  //   [26, 26],
  //   [26, 25],
  //   [26, 24],
  //   [26, 23],
  //   [26, 19],
  //   [26, 20],
  //   [26, 17],
  //   [26, 16],
  //   [26, 15],
  //   [26, 14],
  //   [26, 13],
  //   [26, 11],
  // ];
});
